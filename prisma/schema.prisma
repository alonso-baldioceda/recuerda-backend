generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Bill {
  id          Int          @id @default(autoincrement())
  fileNumber  String
  description String
  status      BillStatus
  createdAt   DateTime     @default(now())

  details     BillDetail[]
  votes       Vote[]
}

model BillDetail {
  id        Int     @id @default(autoincrement())
  billId    Int
  bill      Bill    @relation(fields: [billId], references: [id])
  type      String
  content   String  @db.Text
  className String?
}

model Vote {
  id               Int             @id @default(autoincrement())
  representativeId Int
  billId           Int
  type             VoteType

  representative   Representative @relation(fields: [representativeId], references: [id])
  bill             Bill           @relation(fields: [billId], references: [id])
}

enum VoteType {
  IN_FAVOR
  AGAINST
  ABSENT
}

enum BillStatus {
  ZERO @map("0")
  ONE  @map("1")
}

model Province {
  id             Int              @id
  name           String
  representatives Representative[]
}

model Representative {
  id         Int                  @id
  name       String
  avatar     String
  fuel       Boolean
  provinceId Int
  province   Province             @relation(fields: [provinceId], references: [id])
  partyAffiliations RepresentativeParty[]
  votes      Vote[]
}

model Party {
  id           Int                @id
  name         String
  flag         String
  description  String?  @db.Text
  affiliations RepresentativeParty[]
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
}

model RepresentativeParty {
  id               Int             @id @default(autoincrement())
  representativeId Int
  partyId          Int
  from             DateTime
  to               DateTime

  representative   Representative  @relation(fields: [representativeId], references: [id])
  party            Party           @relation(fields: [partyId], references: [id])
}
